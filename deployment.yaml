version: '3'

services:
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - admin
      - authentication
      - daemon
      - customer
      - warehouse
  authenticationDB:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
    volumes:
      - dbAuthenticationData:/var/lib/mysql
    networks:
      - authentication
  authenticationDBMigration:
    image: authenticationdbmigration
    environment:
      - DATABASE_URL=authenticationDB
    depends_on:
      authenticationDB:
        condition: service_healthy
    networks:
      - authentication
    build:
      context: .
      dockerfile: authenticationDBMigration.dockerfile
  authentication:
    image: authentication
    environment:
      - DATABASE_URL=authenticationDB
    depends_on:
      - authenticationDBMigration
    ports:
      - "5000:5000"
    networks:
      - authentication
    build:
      context: .
      dockerfile: authentication.dockerfile
  applicationsDB:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
    volumes:
      - dbApplicationsData:/var/lib/mysql
    networks:
      - customer
      - daemon
      - admin
  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - warehouse
      - daemon
  applicationsDBMigration:
    image: applicationsdbmigration
    environment:
      - DATABASE_URL=applicationsDB
    depends_on:
      applicationsDB:
        condition: service_healthy
    networks:
      - customer
      - daemon
      - admin
    build:
      context: .
      dockerfile: applicationsDBMigrations.dockerfile
  customer:
    image: customer
    environment:
      - DATABASE_URL=applicationsDB
      - TZ=Europe/Paris
    depends_on:
      - applicationsDBMigration
    ports:
      - 5001:5001
    networks:
      - customer
    build:
      context: .
      dockerfile: customer.dockerfile
  warehouse:
    image: warehouse
    environment:
      - DATABASE_URL=applicationsDB
    depends_on:
      - applicationsDBMigration
    ports:
      - "5002:5002"
    networks:
      - warehouse
    build:
      context: .
      dockerfile: warehouse.dockerfile
  admin:
    image: admin
    environment:
      - DATABASE_URL=applicationsDB
      - TZ=Europe/Paris
    depends_on:
      - applicationsDBMigration
    ports:
      - "5003:5003"
    networks:
      - admin
    build:
      context: .
      dockerfile: admin.dockerfile
  daemon:
    image: daemon
    environment:
      - DATABASE_URL=applicationsDB
      - TZ=Europe/Paris
    depends_on:
      - applicationsDBMigration
    networks:
      - daemon
    build:
      context: .
      dockerfile: daemon.dockerfile

volumes:
  dbAuthenticationData:
  dbApplicationsData:

networks:
  authentication:
  admin:
  customer:
  warehouse:
  daemon:

